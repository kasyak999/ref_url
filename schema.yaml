openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/auth/users/:
    post:
      operationId: createUserProfile
      description: 'Регистрация пользователя'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
      tags:
        - api
  /api/auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: Полученик токена
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '200':
          description: Успешная аутентификация. Возвращает пару JWT-токенов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTTokenResponse'
      tags:
        - api
  /api/referral/:
    post:
      operationId: createReferralCode
      description: Создание реферального кода
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferralCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferralCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCreate'
          description: 'Реферальный код успешно создан.'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  non_field_errors:
                    type: string
                    example: ['У вас уже есть активный реферальный код.']
          description: 'Ошибка: уже существует активный реферальный код.'
      tags:
        - api
  /api/referral/code/:
    post:
      operationId: codeReferralCode
      description: Получение кода по email пользователя
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'user@example.com'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCode'
          description: 'Успешно.'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: ['Пользователь с таким email не найден.']
          description: 'Пользователь с таким email не найден.'
      tags:
        - api
  /api/referral/delete/:
    delete:
      operationId: destroyReferralCode
      description: Удаление реферального кода текущего пользователя
      parameters: []
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Реферальный код удалён.'
          description: 'Реферальный код удалён.'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'У вас нет активного кода.'
          description: 'У вас нет активного кода.'
      tags:
        - api

components:
  schemas:
    JWTTokenResponse:
      type: object
      properties:
        refresh:
          type: string
          example: token
        access:
          type: string
          example: token
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: >-
            Обязательное поле. Не более 150 символов. Только буквы, цифры и
            символы @/./+/-/_.
          pattern: "login"
          maxLength: 150
        password:
          type: string
          maxLength: 128
          format: password
        referral_code:
          type: string
      required:
        - username
        - password
    ReferralCreate:
      type: object
      properties:
        days_valid:
          type: integer
          maximum: 150
          minimum: 1
          writeOnly: true
      required:
        - days_valid
    ReferralCode:
      type: object
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          format: string
      required:
        - email
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password